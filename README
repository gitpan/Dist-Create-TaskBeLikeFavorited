NAME
    Dist::Create::TaskBeLikeFavorited - Create your own
    Task-BeLike-$AUTHOR-Favorited distribution

VERSION
    This document describes version 0.04 of
    Dist::Create::TaskBeLikeFavorited (from Perl distribution
    Dist-Create-TaskBeLikeFavorited), released on 2014-05-17.

SYNOPSIS
    To create and upload your dist to CPAN:

     % create-task-belike-favorited-dist SHARYANTO
     % cd Task-BeLike-SHARYANTO-Favorited
     % # you'll probably want to edit dist.ini first to tweak stuffs
     % dzil release

    To update your dist and release to CPAN:

     % cd Task-BeLike-SHARYANTO-Favorited
     % update-task-belike-favorited-dist
     % dzil release

DESCRIPTION
    "Task::BeLike::$AUTHOR::Favorited" tasks contain modules that have been
    favorited by $AUTHOR (by clicking the "++" button) on
    <http://metacpan.org>. This module creates distributions that contain
    such tasks.

    The created distributions currently require Dist::Zilla and
    Dist::Zilla::PluginBundle::SHARYANTO to be built.

FUNCTIONS
  create_task_belike_favorited_dist(%args) -> [status, msg, result, meta]
    Create Task-BeLike-$AUTHOR-Favorited distribution.

    Arguments ('*' denotes required arguments):

    *   cpan_id* => *str*

    *   target_dir => *str*

        Target distribution directory.

        Defaults to ./Task-BeLike-$AUTHOR-Favorited

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

  update_task_belike_favorited_dist() -> [status, msg, result, meta]
    Update Task-BeLike-$AUTHOR-Favorited distribution.

    No arguments.

    Return value:

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

FAQ
  Why?
    Mostly so you can do something like:

     % cpanm -n Task::BeLike::YOU::Favorited

    on a fresh system and conveniently have all your favorite modules
    installed.

    Of course, you'll have to build and upload your task distribution to
    CPAN first (see Synopsis).

  But you can simply do something simpler like this instead ...
     % cpan_favorites() {
       perl -Mojo -E "g('https://metacpan.org/author/$1')->dom('td.release a')->pluck('text')->each(sub{s/-/::/g;say})"
       }
     % cpan_favorites SHARYANTO | cpanm -n

    True. Creating a task distribution on CPAN is definitely more work.
    However, creating a task distribution has several pro's: 1) it works
    offline if you mirror CPAN; 2) it lets you track your favorites over
    time by comparing past versions of the task.

SEE ALSO
    http://blogs.perl.org/users/dpetrov/2012/11/install-all-metacpan-favorit
    ed-distributions.html

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Dist-Create-TaskBeLikeFavorited>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-Dist-Create-TaskBeLikeFavorited>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Dist-Create-TaskBeLik
    eFavorited>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

